android {
    namespace "com.ureteneller.app"
    compileSdk rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.ureteneller.app"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        aaptOptions {
            // Modern web app varlıkları için önerilen ignore kalıbı
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }

    // 🔐 İMZA AYARLARI
    // Öncelik: ENV -> gradle.properties
    signingConfigs {
        release {
            def ksPath = System.getenv("MYAPP_UPLOAD_STORE_FILE") ?: project.findProperty("MYAPP_UPLOAD_STORE_FILE")
            def ksPass = System.getenv("MYAPP_UPLOAD_STORE_PASSWORD") ?: project.findProperty("MYAPP_UPLOAD_STORE_PASSWORD")
            def ka     = System.getenv("MYAPP_UPLOAD_KEY_ALIAS") ?: project.findProperty("MYAPP_UPLOAD_KEY_ALIAS")
            def kaPass = System.getenv("MYAPP_UPLOAD_KEY_PASSWORD") ?: project.findProperty("MYAPP_UPLOAD_KEY_PASSWORD")

            if (ksPath == null || ksPath.toString().trim().isEmpty()) {
                throw new GradleException("Keystore yolu (MYAPP_UPLOAD_STORE_FILE) tanımlı değil.")
            }
            storeFile file(ksPath)
            storePassword ksPass
            keyAlias ka
            keyPassword kaPass
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            // debug imza Android Studio'nun default debug.keystore'udur
        }
    }
}
